redis

总: redis的设计,是为了满足高频数据的读写需求。
通过将数据从IO迁移到内存的形式来进行处理。



redis对象种类
redis底层是C语言,它创建了一些对象类型,以方便地提供服务.

对象的主要属性是种类(type),它标识着一个对象如何向外界提供服务.
也就是说,外界可以调用对象的本地方法,在服务器上完成计算之后发送到客户端中.

对象的另一属性是encoding(编码),它标识着一个对象的底层数据结构

redis的对象种类(type)主要有5种,分别是
String 字符串类型.它的编码可能是int(整数型),整数型非常方便实现+-操作
它的编码还可能是raw以及embstr,这两个编码好像是和简单动态字符串,SDS 有关
SDS主要封装一个char数组,同时有两个域,分别是数组的长度和数组的容量.
数组拥有额外的容量方便string扩容.数组的长度方便计算string的长度
与此同时,这样组织还可以使得String可以封装一些序列化的二进制代码,使得String可以应用于存储小文件.

String除了存储小文件,存储int,存储字符串的功能之外,它的位图设计还让它可以方便地起到一个布尔数组的功能.该功能可以用来服务于一些场景,比如



第二个种类是hash.hash种类适合存储这样一些对象,这些对象具有自己的一系列属性和值（K-V）,
在redis中,这些属性用field来称呼,也就是一个key-field-value的结构.
可以方便地通过对象的属性来获取它的值,通过hget key field指令
hash的底层实现主要是依靠字典/散列表(hashtable)来实现的,

第三个种类是list.list适合存储这样一些对象,它们以某种顺序(sequential)组织在一起
list的底层实现类似于linkedlist
类比Java我们可以发现,这个数据结构可以用来实现栈和队列,在命令端,它是借由lpop rpush的双向操作来实现的.

同时,list也支持按照顺序索引的功能
当list容量较小的时候,会用ziplist来进行实现.

第四个种类是set 它适合存储一些集合,如果这个集合不要求以某种顺序来组织,那么就使用set
set的ranpop操作可以用来实现集合的随机获取.它可以用来实现随机数
set的底层实现是哈希表,把value设为null

第五个种类是zset 它适合存储一些集合,同时要求这个集合以某种顺序来进行组织
底层实现是skiplist 它是一个方便查找的数据结构
在双向链表的基础上, 









